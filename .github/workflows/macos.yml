name: MacOS

on:
  pull_request:
  workflow_dispatch: #allows to manually run a workflow
    inputs:
      myCommit:
        description: 'Commit SHA1'
        required: false
        default: ''
        type: string 
  push:
  release:
    types: [published]

#concurrency:
#  group: ${{ github.workflow }}-${{ github.ref }}
#  cancel-in-progress: true

jobs:
  build_macos:
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug, Release]
        architecture: [x64] #Todo: Change to [x64, arm64] when github adds m1 builds later this year
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        ref: ${{ inputs.myCommit }}

    - name: Check for Data cache
      id: check-for-data-cache
      uses: actions/cache/restore@v3
      with:
        path: |
          OpenEnroth_GameData
        key: data-cache

    - name: Copy shaders
      if: steps.check-for-data-cache.outputs.cache-hit == 'true'    
      run: |
        cp -r /Users/runner/work/OpenEnroth/OpenEnroth/resources/shaders /Users/runner/work/OpenEnroth/OpenEnroth/OpenEnroth_GameData/mm7

    - name: Install dependencies
      run: |
        brew install ffmpeg@4

    - name: ccache save cache on merge
      if: github.event.pull_request.merged == true
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: macosx-${{ matrix.configuration }}-${{ matrix.architecture }}

    - name: ccache dont save cache
      if: github.event.pull_request.merged != true
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: macosx-${{ matrix.configuration }}-${{ matrix.architecture }}
        save: false

    - name: Configure
      run: |
        cmake -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DENABLE_TESTS=On -DCMAKE_PREFIX_PATH="/usr/local/opt/ffmpeg@4"

    - name: Build
      working-directory: build
      run: |
        make -j4

    - name: Tests
      working-directory: build
      run: |
        make UnitTest
        
    - name: GameTest
      if: steps.check-for-data-cache.outputs.cache-hit == 'true'    
      working-directory: build
      run: |
        pwd
        make GameTest_NullRenderer
      env:
        OPENENROTH_MM7_PATH: /Users/runner/work/OpenEnroth/OpenEnroth/OpenEnroth_GameData/mm7        
        
    - name: Prepare artifact
      run: |
        mkdir dist
        cp -r build/src/Bin/OpenEnroth/OpenEnroth.app dist/
        cp -r resources/* dist/
        hdiutil create OpenEnroth.dmg -ov -volname "OpenEnroth" -fs HFS+ -srcfolder dist

