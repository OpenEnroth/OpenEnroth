#pragma once

#include <cstdint>

enum class Condition : uint32_t {
    CONDITION_CURSED = 0,
    CONDITION_WEAK = 1,
    CONDITION_SLEEP = 2,
    CONDITION_FEAR = 3,
    CONDITION_DRUNK = 4,
    CONDITION_INSANE = 5,
    CONDITION_POISON_WEAK = 6,
    CONDITION_DISEASE_WEAK = 7,
    CONDITION_POISON_MEDIUM = 8,
    CONDITION_DISEASE_MEDIUM = 9,
    CONDITION_POISON_SEVERE = 10,
    CONDITION_DISEASE_SEVERE = 11,
    CONDITION_PARALYZED = 12,
    CONDITION_UNCONSCIOUS = 13,
    CONDITION_DEAD = 14,
    CONDITION_PETRIFIED = 15,
    CONDITION_ERADICATED = 16,
    CONDITION_ZOMBIE = 17,
    CONDITION_GOOD = 18,

    CONDITION_FIRST = CONDITION_CURSED,
    CONDITION_LAST = CONDITION_GOOD
};
using enum Condition;

// TODO(pskelton): #enum drop CHARACTER_SKILL_ at start?
enum class CharacterSkillMastery {
    CHARACTER_SKILL_MASTERY_NONE = 0,
    CHARACTER_SKILL_MASTERY_NOVICE = 1,
    CHARACTER_SKILL_MASTERY_EXPERT = 2,
    CHARACTER_SKILL_MASTERY_MASTER = 3,
    CHARACTER_SKILL_MASTERY_GRANDMASTER = 4,

    CHARACTER_SKILL_MASTERY_FIRST = CHARACTER_SKILL_MASTERY_NOVICE,
    CHARACTER_SKILL_MASTERY_LAST = CHARACTER_SKILL_MASTERY_GRANDMASTER
};
using enum CharacterSkillMastery;

enum class CharacterBuff {
    CHARACTER_BUFF_RESIST_AIR = 0,
    CHARACTER_BUFF_BLESS = 1,
    CHARACTER_BUFF_RESIST_BODY = 2,
    CHARACTER_BUFF_RESIST_EARTH = 3,
    CHARACTER_BUFF_FATE = 4,
    CHARACTER_BUFF_RESIST_FIRE = 5,
    CHARACTER_BUFF_HAMMERHANDS = 6,
    CHARACTER_BUFF_HASTE = 7,
    CHARACTER_BUFF_HEROISM = 8,
    CHARACTER_BUFF_RESIST_MIND = 9,
    CHARACTER_BUFF_PAIN_REFLECTION = 10,
    CHARACTER_BUFF_PRESERVATION = 11,
    CHARACTER_BUFF_REGENERATION = 12,
    CHARACTER_BUFF_SHIELD = 13,
    CHARACTER_BUFF_STONESKIN = 14,
    CHARACTER_BUFF_ACCURACY = 15,
    CHARACTER_BUFF_ENDURANCE = 16,
    CHARACTER_BUFF_INTELLIGENCE = 17,
    CHARACTER_BUFF_LUCK = 18,
    CHARACTER_BUFF_STRENGTH = 19,
    CHARACTER_BUFF_PERSONALITY = 20,
    CHARACTER_BUFF_SPEED = 21,
    CHARACTER_BUFF_RESIST_WATER = 22,
    CHARACTER_BUFF_WATER_WALK = 23,

    CHARACTER_BUFF_FIRST = CHARACTER_BUFF_RESIST_AIR,
    CHARACTER_BUFF_LAST = CHARACTER_BUFF_WATER_WALK
};
using enum CharacterBuff;

enum class CharacterSpeech {
    SPEECH_NONE = 0,
    SPEECH_KILL_WEAK_ENEMY = 1,
    SPEECH_KILL_STRONG_ENEMY = 2,
    SPEECH_STORE_CLOSED = 3,
    SPEECH_TRAP_DISARMED = 4,
    SPEECH_TRAP_EXPLODED = 5,
    SPEECH_AVOID_DAMAGE = 6,
    SPEECH_ID_ITEM_WEAK = 7,
    SPEECH_ID_ITEM_STRONG = 8,
    SPEECH_ID_ITEM_FAIL = 9,
    SPEECH_REPAIR_SUCCESS = 10,
    SPEECH_REPAIR_FAIL = 11,
    SPEECH_SET_QUICK_SPELL = 12,
    SPEECH_CANT_REST_HERE = 13,
    SPEECH_SKILL_INCREASE = 14,
    SPEECH_NO_ROOM = 15,
    SPEECH_POTION_SUCCESS = 16,
    SPEECH_POTION_EXPLODE = 17,
    SPEECH_DOOR_LOCKED = 18,
    SPEECH_WONT_BUDGE = 19,
    SPEECH_CANT_LEARN_SPELL = 20,
    SPEECH_LEARN_SPELL = 21,
    SPEECH_GOOD_DAY = 22,
    SPEECH_GOOD_EVENING = 23,
    SPEECH_DAMAGED = 24,
    SPEECH_WEAK = 25,
    SPEECH_FEAR = 26,
    SPEECH_POISONED = 27,
    SPEECH_DISEASED = 28,
    SPEECH_INSANE = 29,
    SPEECH_CURSED = 30,
    SPEECH_DRUNK = 31,
    SPEECH_UNCONSCIOUS = 32,
    SPEECH_DEAD = 33,
    SPEECH_PETRIFIED = 34,
    SPEECH_ERADICATED = 35,
    SPEECH_DRINK_POTION = 36,
    SPEECH_READ_SCROLL = 37,
    SPEECH_NOT_ENOUGH_GOLD = 38,
    SPEECH_CANT_EQUIP = 39,
    SPEECH_ITEM_BROKEN = 40,
    SPEECH_SP_DRAINED = 41,
    SPEECH_AGING = 42,
    SPEECH_SPELL_FAILED = 43,
    SPEECH_DAMAGED_PARTY = 44,
    SPEECH_TIRED = 45,
    SPEECH_ENTER_DUNGEON = 46,
    SPEECH_LEAVE_DUNGEON = 47,
    SPEECH_BADLY_HURT = 48,
    SPEECH_CAST_SPELL = 49,
    SPEECH_SHOOT = 50,
    SPEECH_ATTACK_HIT = 51,
    SPEECH_ATTACK_MISS = 52,
    SPEECH_BEG = 53,
    SPEECH_BEG_FAIL = 54,
    SPEECH_THREAT = 55,
    SPEECH_THREAT_FAIL = 56,
    SPEECH_BRIBE = 57,
    SPEECH_BRIBE_FAIL = 58,
    SPEECH_NPC_DONT_TALK = 59,
    SPEECH_FOUND_ITEM = 60,
    SPEECH_HIRE_NPC = 61,
    SPEECH_62 = 62,   // unknown
    SPEECH_LOOK_UP = 63,
    SPEECH_LOOK_DOWN = 64,
    SPEECH_YELL = 65,
    SPEECH_FALLING = 66,
    SPEECH_PACKS_FULL = 67,
    SPEECH_TAVERN_DRINK = 68,
    SPEECH_TAVERN_GOT_DRUNK = 69,
    SPEECH_TAVERN_TIP = 70,
    SPEECH_TRAVEL_HORSE = 71,
    SPEECH_TRAVEL_BOAT = 72,
    SPEECH_SHOP_IDENTIFY = 73,
    SPEECH_SHOP_REPAIR = 74,
    SPEECH_ITEM_BUY = 75,
    SPEECH_ALREADY_INDENTIFIED = 76,
    SPEECH_ITEM_SOLD = 77,
    SPEECH_SKILL_LEARNED = 78,
    SPEECH_WRONG_SHOP = 79,
    SPEECH_SHOP_RUDE = 80,
    SPEECH_BANK_DEPOSIT = 81,
    SPEECH_TEMPLE_HEAL = 82,
    SPEECH_TEMPLE_DONATE = 83,
    SPEECH_HELLO_HOUSE = 84,
    SPEECH_SKILL_MASTERY_INC = 85,
    SPEECH_JOINED_GUILD = 86,
    SPEECH_LEVEL_UP = 87,
    SPEECH_88 = 88,  // unknown
    SPEECH_89 = 89,  // unknown
    SPEECH_90 = 90,  // unknown
    SPEECH_STAT_BONUS_INC = 91,
    SPEECH_STAT_BASE_INC = 92,
    SPEECH_QUEST_GOT = 93,
    SPEECH_94 = 94,  // unknown
    SPEECH_95 = 95,  // unknown
    SPEECH_AWARD_GOT = 96,  // award
    SPEECH_97 = 97,  // unknown
    SPEECH_AFRAID_SILENT = 98,
    SPEECH_CHEATED_DEATH = 99,  // zombie/ death groan
    SPEECH_IN_PRISON = 100,
    SPEECH_101 = 101,  // unknown
    SPEECH_PICK_ME = 102,
    SPEECH_AWAKEN = 103,
    SPEECH_ID_MONSTER_WEAK = 104,
    SPEECH_ID_MONSTER_STRONG = 105,
    SPEECH_ID_MONSTER_FAIL = 106,
    SPEECH_LAST_MAN_STANDING = 107,
    SPEECH_NOT_ENOUGH_FOOD = 108,
    SPEECH_DEATH_BLOW = 109,
    SPEECH_110 = 110,  // unknown

    SPEECH_FIRST = SPEECH_NONE,
    SPEECH_LAST = SPEECH_110
};
using enum CharacterSpeech;

enum class Race {
    RACE_HUMAN = 0,
    RACE_ELF = 1,
    RACE_GOBLIN = 2,
    RACE_DWARF = 3,

    RACE_FIRST = RACE_HUMAN,
    RACE_LAST = RACE_DWARF
};
using enum Race;

enum class ClassSkillAffinity : uint8_t {
    CLASS_SKILL_DENIED = 0,
    CLASS_SKILL_AVAILABLE = 1,
    CLASS_SKILL_PRIMARY = 2
};
using enum ClassSkillAffinity;

// TODO(pskelton): drop CHARACTER_ at start?
enum class CharacterSkillType : int8_t {
    CHARACTER_SKILL_INVALID = -1,
    CHARACTER_SKILL_STAFF = 0,
    CHARACTER_SKILL_SWORD = 1,
    CHARACTER_SKILL_DAGGER = 2,
    CHARACTER_SKILL_AXE = 3,
    CHARACTER_SKILL_SPEAR = 4,
    CHARACTER_SKILL_BOW = 5,
    CHARACTER_SKILL_MACE = 6,
    CHARACTER_SKILL_BLASTER = 7,
    CHARACTER_SKILL_SHIELD = 8,
    CHARACTER_SKILL_LEATHER = 9,
    CHARACTER_SKILL_CHAIN = 10,
    CHARACTER_SKILL_PLATE = 11,
    CHARACTER_SKILL_FIRE = 12,
    CHARACTER_SKILL_AIR = 13,
    CHARACTER_SKILL_WATER = 14,
    CHARACTER_SKILL_EARTH = 15,
    CHARACTER_SKILL_SPIRIT = 16,
    CHARACTER_SKILL_MIND = 17,
    CHARACTER_SKILL_BODY = 18,
    CHARACTER_SKILL_LIGHT = 19,
    CHARACTER_SKILL_DARK = 20,
    CHARACTER_SKILL_ITEM_ID = 21,
    CHARACTER_SKILL_MERCHANT = 22,
    CHARACTER_SKILL_REPAIR = 23,
    CHARACTER_SKILL_BODYBUILDING = 24,
    CHARACTER_SKILL_MEDITATION = 25,
    CHARACTER_SKILL_PERCEPTION = 26,
    CHARACTER_SKILL_DIPLOMACY = 27,
    CHARACTER_SKILL_THIEVERY = 28,
    CHARACTER_SKILL_TRAP_DISARM = 29,
    CHARACTER_SKILL_DODGE = 30,
    CHARACTER_SKILL_UNARMED = 31,
    CHARACTER_SKILL_MONSTER_ID = 32,
    CHARACTER_SKILL_ARMSMASTER = 33,
    CHARACTER_SKILL_STEALING = 34,
    CHARACTER_SKILL_ALCHEMY = 35,
    CHARACTER_SKILL_LEARNING = 36,
    CHARACTER_SKILL_CLUB = 37, // In vanilla clubs are using separate hidden & non-upgradable skill.
    CHARACTER_SKILL_MISC = 38, // Hidden skill that's always 1. Used for wetsuits, for example.

    CHARACTER_SKILL_FIRST_VISIBLE = CHARACTER_SKILL_STAFF,
    CHARACTER_SKILL_LAST_VISIBLE = CHARACTER_SKILL_LEARNING,

    CHARACTER_SKILL_FIRST = CHARACTER_SKILL_STAFF,
    CHARACTER_SKILL_LAST = CHARACTER_SKILL_MISC,
};
using enum CharacterSkillType;

enum class CharacterClass : uint8_t {
    CLASS_KNIGHT = 0,
    CLASS_CAVALIER = 1,
    CLASS_CHAMPION = 2,
    CLASS_BLACK_KNIGHT = 3,
    CLASS_THIEF = 4,
    CLASS_ROGUE = 5,
    CLASS_SPY = 6,
    CLASS_ASSASSIN = 7,
    CLASS_MONK = 8,
    CLASS_INITIATE = 9,
    CLASS_MASTER = 10,
    CLASS_NINJA = 11,
    CLASS_PALADIN = 12,
    CLASS_CRUSADER = 13,
    CLASS_HERO = 14,
    CLASS_VILLIAN = 15,
    CLASS_ARCHER = 16,
    CLASS_WARRIOR_MAGE = 17,
    CLASS_MASTER_ARCHER = 18,
    CLASS_SNIPER = 19,
    CLASS_RANGER = 20,
    CLASS_HUNTER = 21,
    CLASS_RANGER_LORD = 22,
    CLASS_BOUNTY_HUNTER = 23,
    CLASS_CLERIC = 24,
    CLASS_PRIEST = 25,
    CLASS_PRIEST_OF_SUN = 26,
    CLASS_PRIEST_OF_MOON = 27,
    CLASS_DRUID = 28,
    CLASS_GREAT_DRUID = 29,
    CLASS_ARCH_DRUID = 30,
    CLASS_WARLOCK = 31,
    CLASS_SORCERER = 32,
    CLASS_WIZARD = 33,
    CLASS_ARCHAMGE = 34,
    CLASS_LICH = 35,

    CLASS_FIRST = CLASS_KNIGHT,
    CLASS_LAST = CLASS_LICH
};
using enum CharacterClass;

enum class CharacterPortrait : uint16_t {
    PORTRAIT_INVALID = 0,
    PORTRAIT_NORMAL = 1,
    PORTRAIT_CURSED = 2,
    PORTRAIT_WEAK = 3,
    PORTRAIT_SLEEP = 4,
    PORTRAIT_FEAR = 5,
    PORTRAIT_DRUNK = 6,
    PORTRAIT_INSANE = 7,
    PORTRAIT_POISONED = 8,
    PORTRAIT_DISEASED = 9,
    PORTRAIT_PARALYZED = 10,
    PORTRAIT_UNCONSCIOUS = 11,
    PORTRAIT_PETRIFIED = 12,
    PORTRAIT_BLINK = 13,
    PORTRAIT_WINK = 14, // some faces wink, some shrug with eyebrows
    PORTRAIT_MOUTH_OPEN_RANDOM = 15, // used for random expression, slightly opens mouth
    PORTRAIT_PURSE_LIPS_RANDOM = 16, // used for random expression
    PORTRAIT_LOOK_UP = 17,
    PORTRAIT_LOOK_RIGHT = 18,
    PORTRAIT_LOOK_LEFT = 19,
    PORTRAIT_LOOK_DOWN = 20,
    PORTRAIT_TALK = 21,
    PORTRAIT_MOUTH_OPEN_WIDE = 22,
    PORTRAIT_MOUTH_OPEN_A = 23,
    PORTRAIT_MOUTH_OPEN_O = 24,
    PORTRAIT_NO = 25,
    PORTRAIT_26 = 26,
    PORTRAIT_YES = 27,
    PORTRAIT_28 = 28,
    PORTRAIT_PURSE_LIPS_1 = 29, // these 3 seems to produce same expression
    PORTRAIT_PURSE_LIPS_2 = 30,
    PORTRAIT_PURSE_LIPS_3 = 31,
    PORTRAIT_32 = 32,
    PORTRAIT_AVOID_DAMAGE = 33,
    PORTRAIT_DMGRECVD_MINOR = 34,
    PORTRAIT_DMGRECVD_MODERATE = 35,
    PORTRAIT_DMGRECVD_MAJOR = 36,
    PORTRAIT_SMILE = 37, // not drowning
    PORTRAIT_WIDE_SMILE = 38,
    PORTRAIT_SAD = 39,
    PORTRAIT_CAST_SPELL = 40,
    PORTRAIT_41 = 41,
    PORTRAIT_42 = 42,
    PORTRAIT_43 = 43,
    PORTRAIT_44 = 44,
    PORTRAIT_45 = 45,

    PORTRAIT_SCARED = 46,  // like falling
    PORTRAIT_47 = 47,
    PORTRAIT_48 = 48,
    PORTRAIT_49 = 49,
    PORTRAIT_50 = 50,
    PORTRAIT_51 = 51,
    PORTRAIT_52 = 52,
    PORTRAIT_53 = 53,
    PORTRAIT_54 = 54,
    PORTRAIT_55 = 55,
    PORTRAIT_56 = 56,
    PORTRAIT_57 = 57,
    PORTRAIT_FALLING = 58, // TODO(pskelton): is this actually used or just fear?

    // ?

    PORTRAIT_DEAD = 98,
    PORTRAIT_ERADICATED = 99,
};
using enum CharacterPortrait;

enum class CharacterSex : uint8_t {
    SEX_MALE = 0,
    SEX_FEMALE = 1,

    SEX_FIRST = SEX_MALE,
    SEX_LAST = SEX_FEMALE,
};
using enum CharacterSex;

enum class CharacterAttribute {
    ATTRIBUTE_MIGHT = 0,
    ATTRIBUTE_INTELLIGENCE = 1,
    ATTRIBUTE_PERSONALITY = 2,
    ATTRIBUTE_ENDURANCE = 3,
    ATTRIBUTE_ACCURACY = 4,
    ATTRIBUTE_SPEED = 5,
    ATTRIBUTE_LUCK = 6,
    ATTRIBUTE_HEALTH = 7,
    ATTRIBUTE_MANA = 8,
    ATTRIBUTE_AC_BONUS = 9,

    ATTRIBUTE_RESIST_FIRE = 10,
    ATTRIBUTE_RESIST_AIR = 11,
    ATTRIBUTE_RESIST_WATER = 12,
    ATTRIBUTE_RESIST_EARTH = 13,
    ATTRIBUTE_RESIST_MIND = 14,
    ATTRIBUTE_RESIST_BODY = 15,

    ATTRIBUTE_SKILL_ALCHEMY = 16,
    ATTRIBUTE_SKILL_STEALING = 17,
    ATTRIBUTE_SKILL_TRAP_DISARM = 18,
    ATTRIBUTE_SKILL_ITEM_ID = 19,
    ATTRIBUTE_SKILL_MONSTER_ID = 20,
    ATTRIBUTE_SKILL_ARMSMASTER = 21,
    ATTRIBUTE_SKILL_DODGE = 22,
    ATTRIBUTE_SKILL_UNARMED = 23,

    ATTRIBUTE_LEVEL = 24,
    ATTRIBUTE_ATTACK = 25,
    ATTRIBUTE_MELEE_DMG_BONUS = 26,
    ATTRIBUTE_MELEE_DMG_MIN = 27,
    ATTRIBUTE_MELEE_DMG_MAX = 28,
    ATTRIBUTE_RANGED_ATTACK = 29,
    ATTRIBUTE_RANGED_DMG_BONUS = 30,
    ATTRIBUTE_RANGED_DMG_MIN = 31,
    ATTRIBUTE_RANGED_DMG_MAX = 32,
    ATTRIBUTE_RESIST_SPIRIT = 33,

    ATTRIBUTE_SKILL_FIRE = 34,
    ATTRIBUTE_SKILL_AIR = 35,
    ATTRIBUTE_SKILL_WATER = 36,
    ATTRIBUTE_SKILL_EARTH = 37,
    ATTRIBUTE_SKILL_SPIRIT = 38,
    ATTRIBUTE_SKILL_MIND = 39,
    ATTRIBUTE_SKILL_BODY = 40,
    ATTRIBUTE_SKILL_LIGHT = 41,
    ATTRIBUTE_SKILL_DARK = 42,
    ATTRIBUTE_SKILL_MEDITATION = 43,
    ATTRIBUTE_SKILL_BOW = 44,
    ATTRIBUTE_SKILL_SHIELD = 45,
    ATTRIBUTE_SKILL_LEARNING = 46,

    ATTRIBUTE_FIRST_STAT = ATTRIBUTE_MIGHT,
    ATTRIBUTE_LAST_STAT = ATTRIBUTE_LUCK,

    ATTRIBUTE_FIRST_ENCHANTABLE = ATTRIBUTE_MIGHT,
    ATTRIBUTE_LAST_ENCHANTABLE = ATTRIBUTE_SKILL_UNARMED,
};
using enum CharacterAttribute;
