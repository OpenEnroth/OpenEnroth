#pragma once

#include <cstdint>
#include <cassert>
#include <utility>

#include "Engine/Objects/CharacterEnums.h"


#define SKILL_TO_LEARNING_DIALOGUE_ID(skill)  (36 + std::to_underlying(skill))

enum class DialogueId : int32_t {
    DIALOGUE_NULL = 0,
    DIALOGUE_MAIN = 1,
    DIALOGUE_SHOP_BUY_STANDARD = 2,
    DIALOGUE_SHOP_SELL = 3,
    DIALOGUE_SHOP_IDENTIFY = 4,
    DIALOGUE_SHOP_REPAIR = 5,
    DIALOGUE_SHOP_6 = 6,
    DIALOGUE_BANK_PUT_GOLD = 7,
    DIALOGUE_BANK_GET_GOLD = 8,
    DIALOGUE_USE_HIRED_NPC_ABILITY = 9,
    DIALOGUE_TEMPLE_HEAL = 10,
    DIALOGUE_TEMPLE_DONATE = 11,
    DIALOGUE_12 = 12,
    DIALOGUE_13_hiring_related = 13,
    DIALOGUE_14 = 14,
    DIALOGUE_TAVERN_REST = 15,
    DIALOGUE_TAVERN_BUY_FOOD = 16,
    DIALOGUE_TRAINING_HALL_TRAIN = 17,
    DIALOGUE_GUILD_BUY_BOOKS = 18,
    DIALOGUE_SCRIPTED_LINE_1 = 19,
    DIALOGUE_SCRIPTED_LINE_2 = 20,
    DIALOGUE_SCRIPTED_LINE_3 = 21,
    DIALOGUE_SCRIPTED_LINE_4 = 22,
    DIALOGUE_SCRIPTED_LINE_5 = 23,
    DIALOGUE_SCRIPTED_LINE_6 = 24,
    //...
    DIALOGUE_LEARN_STAFF = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_STAFF),  // 36
    DIALOGUE_LEARN_SWORD = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_SWORD),
    DIALOGUE_LEARN_DAGGER = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_DAGGER),
    DIALOGUE_LEARN_AXE = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_AXE),
    DIALOGUE_LEARN_SPEAR = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_SPEAR),
    DIALOGUE_LEARN_BOW = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_BOW),
    DIALOGUE_LEARN_MACE = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_MACE),
    DIALOGUE_LEARN_BLASTER = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_BLASTER),
    DIALOGUE_LEARN_SHIELD = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_SHIELD),
    DIALOGUE_LEARN_LEATHER = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_LEATHER),
    DIALOGUE_LEARN_CHAIN = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_CHAIN),
    DIALOGUE_LEARN_PLATE = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_PLATE),
    DIALOGUE_LEARN_FIRE = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_FIRE),
    DIALOGUE_LEARN_AIR = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_AIR),
    DIALOGUE_LEARN_WATER = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_WATER),
    DIALOGUE_LEARN_EARTH = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_EARTH),
    DIALOGUE_LEARN_SPIRIT = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_SPIRIT),
    DIALOGUE_LEARN_MIND = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_MIND),
    DIALOGUE_LEARN_BODY = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_BODY),
    DIALOGUE_LEARN_LIGHT = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_LIGHT),
    DIALOGUE_LEARN_DARK = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_DARK),
    DIALOGUE_LEARN_ITEM_ID = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_ITEM_ID),
    DIALOGUE_LEARN_MERCHANT = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_MERCHANT),
    DIALOGUE_LEARN_REPAIR = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_REPAIR),
    DIALOGUE_LEARN_BODYBUILDING = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_BODYBUILDING),
    DIALOGUE_LEARN_MEDITATION = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_MEDITATION),
    DIALOGUE_LEARN_PERCEPTION = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_PERCEPTION),
    DIALOGUE_LEARN_DIPLOMACY = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_DIPLOMACY),
    DIALOGUE_LEARN_THIEVERY = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_THIEVERY),
    DIALOGUE_LEARN_TRAP_DISARM = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_TRAP_DISARM),
    DIALOGUE_LEARN_DODGE = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_DODGE),
    DIALOGUE_LEARN_UNARMED = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_UNARMED),
    DIALOGUE_LEARN_MONSTER_ID = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_MONSTER_ID),
    DIALOGUE_LEARN_ARMSMASTER = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_ARMSMASTER),
    DIALOGUE_LEARN_STEALING = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_STEALING),
    DIALOGUE_LEARN_ALCHEMY = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_ALCHEMY),
    DIALOGUE_LEARN_LEARNING = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_LEARNING),
    DIALOGUE_LEARN_CLUB = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_CLUB),
    DIALOGUE_LEARN_MISC = SKILL_TO_LEARNING_DIALOGUE_ID(SKILL_MISC),  // 74
    DIALOGUE_75 = 75,
    DIALOGUE_HIRE_FIRE = 76,
    DIALOGUE_PROFESSION_DETAILS = 77,
    DIALOGUE_MASTERY_TEACHER_OFFER = 78,
    DIALOGUE_MASTERY_TEACHER_LEARN = 79,
    DIALOGUE_80 = 80,
    DIALOGUE_MAGIC_GUILD_OFFER = 81,
    DIALOGUE_MAGIC_GUILD_JOIN = 82,
    DIALOGUE_83_bounty_hunting = 83,
    DIALOGUE_84_oracle = 84,
    DIALOGUE_ARENA_SELECT_PAGE = 85,
    DIALOGUE_ARENA_SELECT_SQUIRE = 86,
    DIALOGUE_ARENA_SELECT_KNIGHT = 87,
    DIALOGUE_ARENA_SELECT_LORD = 88,
    DIALOGUE_ARENA_WELCOME = 89,
    DIALOGUE_ARENA_FIGHT_NOT_OVER_YET = 90,
    DIALOGUE_ARENA_REWARD = 91,
    DIALOGUE_ARENA_ALREADY_WON = 92,
    DIALOGUE_93 = 93,
    DIALOGUE_SHOP_DISPLAY_EQUIPMENT = 94,
    DIALOGUE_SHOP_BUY_SPECIAL = 95,
    DIALOGUE_LEARN_SKILLS = 96,
    DIALOGUE_97 = 97,
    DIALOGUE_98 = 98,
    DIALOGUE_TOWNHALL_BOUNTY_HUNT = 99,
    DIALOGUE_TOWNHALL_PAY_FINE = 100,
    DIALOGUE_TAVERN_ARCOMAGE_MAIN = 101,
    DIALOGUE_TAVERN_ARCOMAGE_RULES = 102,
    DIALOGUE_TAVERN_ARCOMAGE_VICTORY_CONDITIONS = 103,
    DIALOGUE_TAVERN_ARCOMAGE_RESULT = 104,
    DIALOGUE_TRANSPORT_SCHEDULE_1 = 105,
    DIALOGUE_TRANSPORT_SCHEDULE_2 = 106,
    DIALOGUE_TRANSPORT_SCHEDULE_3 = 107,
    DIALOGUE_TRANSPORT_SCHEDULE_4 = 108,

    DIALOGUE_OTHER = -1,

    DIALOGUE_LEARN_FIRST = DIALOGUE_LEARN_STAFF,
    DIALOGUE_LEARN_LAST = DIALOGUE_LEARN_CLUB, // Doesn't include DIALOGUE_LEARN_MISC, which makes sense, but is a bit weird.
};
using enum DialogueId;

#undef SKILL_TO_LEARNING_DIALOGUE_ID

inline bool IsSkillLearningDialogue(DialogueId type) {
    return type >= DIALOGUE_LEARN_FIRST && type <= DIALOGUE_LEARN_LAST;
}

inline Skill GetLearningDialogueSkill(DialogueId type) {
    assert(IsSkillLearningDialogue(type));
    return static_cast<Skill>(std::to_underlying(type) - std::to_underlying(DIALOGUE_LEARN_STAFF) + std::to_underlying(SKILL_STAFF));
}
