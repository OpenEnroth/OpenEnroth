#include "InputAction.h"

#include <string>
#include <vector>

#include "Library/Serialization/EnumSerialization.h"

#include "Utility/Segment.h"

// TODO(captainurist): these should be localizable.
MM_DEFINE_ENUM_SERIALIZATION_FUNCTIONS(InputAction, CASE_INSENSITIVE, {
    {INPUT_ACTION_MOVE_FORWARD, "FORWARD"},
    {INPUT_ACTION_MOVE_BACKWARDS, "BACKWARD"},
    {INPUT_ACTION_TURN_LEFT, "LEFT"},
    {INPUT_ACTION_TURN_RIGHT, "RIGHT"},
    {INPUT_ACTION_YELL, "YELL"},
    {INPUT_ACTION_JUMP, "JUMP"},
    {INPUT_ACTION_TOGGLE_TURN_BASED, "COMBAT"},
    {INPUT_ACTION_QUICK_CAST, "CAST READY"},
    {INPUT_ACTION_ATTACK, "ATTACK"},
    {INPUT_ACTION_INTERACT, "TRIGGER"},
    {INPUT_ACTION_OPEN_SPELLBOOK, "CAST"},
    {INPUT_ACTION_PASS, "PASS"},
    {INPUT_ACTION_NEXT_CHAR, "CHAR CYCLE"},
    {INPUT_ACTION_OPEN_QUESTS, "QUEST"},
    {INPUT_ACTION_OPEN_QUICK_REFERENCE, "QUICK REF"},
    {INPUT_ACTION_REST, "REST"},
    {INPUT_ACTION_OPEN_CALENDAR, "TIME/CAL"},
    {INPUT_ACTION_OPEN_AUTONOTES, "AUTONOTES"},
    {INPUT_ACTION_OPEN_MAP, "MAP BOOK"},
    {INPUT_ACTION_TOGGLE_ALWAYS_RUN, "ALWAYS RUN"},
    {INPUT_ACTION_LOOK_UP, "LOOK UP"},
    {INPUT_ACTION_LOOK_DOWN, "LOOK DOWN"},
    {INPUT_ACTION_CENTER_VIEW, "CTR VIEW"},
    {INPUT_ACTION_ZOOM_IN, "ZOOM IN"},
    {INPUT_ACTION_ZOOM_OUT, "ZOOM OUT"},
    {INPUT_ACTION_FLY_UP, "FLY UP"},
    {INPUT_ACTION_FLY_DOWN, "FLY DOWN"},
    {INPUT_ACTION_FLY_LAND, "LAND"},
    {INPUT_ACTION_STRAFE_LEFT, "STRAFE LEFT"},
    {INPUT_ACTION_STRAFE_RIGHT, "STRAFE RIGHT"},
    {INPUT_ACTION_QUICK_SAVE, "QUICK SAVE"},
    {INPUT_ACTION_QUICK_LOAD, "QUICK LOAD"},
    {INPUT_ACTION_OPEN_HISTORY, "HISTORY"},
    {INPUT_ACTION_OPEN_STATS, "STATS"},
    {INPUT_ACTION_OPEN_SKILLS, "SKILLS"},
    {INPUT_ACTION_OPEN_AWARDS, "INVENTORY"},
    {INPUT_ACTION_OPEN_INVENTORY, "AWARDS"},
    {INPUT_ACTION_NEW_GAME, "NEW GAME"},
    {INPUT_ACTION_SAVE_GAME, "SAVE GAME"},
    {INPUT_ACTION_LOAD_GAME, "Load GAME"},
    {INPUT_ACTION_EXIT_GAME, "EXIT GAME"},
    {INPUT_ACTION_BACK_TO_GAME, "RETURN TO GAME"},
    {INPUT_ACTION_OPEN_CONTROLS, "CONTROLS"},
    {INPUT_ACTION_OPEN_OPTIONS, "OPTIONS"},
    {INPUT_ACTION_SHOW_CREDITS, "CREDITS"},
    {INPUT_ACTION_PARTY_CREATION_CLEAR, "CLEAR"},
    {INPUT_ACTION_PARTY_CREATION_DONE, "RETURN"},
    {INPUT_ACTION_PARTY_CREATION_DEC, "MINUS"},
    {INPUT_ACTION_PARTY_CREATION_INC, "PLUS"},
    {INPUT_ACTION_TRANSITION_YES, "YES"},
    {INPUT_ACTION_TRANSITION_NO, "NO"},
    {INPUT_ACTION_REST_HEAL, "REST 8 HOURS"},
    {INPUT_ACTION_REST_WAIT_TILL_DAWN, "WAIT TILL DAWN"},
    {INPUT_ACTION_REST_WAIT_1_HOUR, "WAIT 1 HOUR"},
    {INPUT_ACTION_REST_WAIT_5_MINUTES, "WAIT 5 MINUTES"},
    {INPUT_ACTION_TAKE_SCREENSHOT, "SCREENSHOT"},
    {INPUT_ACTION_OPEN_CONSOLE, "CONSOLE"},
    {INPUT_ACTION_SELECT_CHAR_1, "CHAR 1"},
    {INPUT_ACTION_SELECT_CHAR_2, "CHAR 2"},
    {INPUT_ACTION_SELECT_CHAR_3, "CHAR 3"},
    {INPUT_ACTION_SELECT_CHAR_4, "CHAR 4"},
    {INPUT_ACTION_SELECT_NPC_1, "NPC 1"},
    {INPUT_ACTION_SELECT_NPC_2, "NPC 2"},
    {INPUT_ACTION_DIALOG_UP, "DIALOG UP"},
    {INPUT_ACTION_DIALOG_DOWN, "DIALOG DOWN"},
    {INPUT_ACTION_DIALOG_LEFT, "DIALOG LEFT"},
    {INPUT_ACTION_DIALOG_RIGHT, "DIALOG RIGHT"},
    {INPUT_ACTION_DIALOG_PRESS, "DIALOG SELECT"},
    {INPUT_ACTION_ESCAPE, "ESCAPE"},
    {INPUT_ACTION_TOGGLE_MOUSE_LOOK, "TOGGLE MOUSE LOOK"},
    {INPUT_ACTION_TOGGLE_WINDOW_MODE, "TOGGLE WINDOW MODE"}
});

std::string GetDisplayName(InputAction action) {
    std::string result;
    if (trySerialize(action, &result))
        return result;
    return "-INVALID-ACTION-";
}
